# vim: syntax=screen
escape ^^^
vbell on
autodetach on
startup_message off
pow_detach_msg "Screen session of \$LOGNAME \$:cr:\$:nl:ended."
defscrollback 1024

#xterm understands both im/ic and doesn't have a status line.
#Note: Do not specify im and ic in the real termcap/info file as
#some programs (e.g. vi) will not work anymore.
termcap  xterm hs@:cs=\E[%i%d;%dr:im=\E[4h:ei=\E[4l
terminfo xterm hs@:cs=\E[%i%p1%d;%p2%dr:im=\E[4h:ei=\E[4l

#80/132 column switching must be enabled for ^AW to work
#change init sequence to not switch width
termcapinfo  xterm Z0=\E[?3h:Z1=\E[?3l:is=\E[r\E[m\E[2J\E[H\E[?7h\E[?1;4;6l

# Make the output buffer large for (fast) xterms.
termcapinfo xterm* OL=10000

# tell screen that xterm can switch to dark background and has function
# keys.
termcapinfo xterm 'VR=\E[?5h:VN=\E[?5l'
termcapinfo xterm 'k1=\E[11~:k2=\E[12~:k3=\E[13~:k4=\E[14~'
termcapinfo xterm 'kh=\E[1~:kI=\E[2~:kD=\E[3~:kH=\E[4~:kP=\E[H:kN=\E[6~'

# special xterm hardstatus: use the window title.
termcapinfo xterm 'hs:ts=\E]2;:fs=\007:ds=\E]2;screen\007'

#terminfo xterm 'vb=\E[?5h$<200/>\E[?5l'
termcapinfo xterm 'vi=\E[?25l:ve=\E[34h\E[?25h:vs=\E[34l'

# emulate part of the 'K' charset
termcapinfo   xterm 'XC=K%,%\E(B,[\304,\\\\\326,]\334,{\344,|\366,}\374,~\337'

# xterm-52 tweaks:
# - uses background color for delete operations
termcapinfo xterm ut

# Extend the vt100 desciption by some sequences.
termcap  vt100* ms:AL=\E[%dL:DL=\E[%dM:UP=\E[%dA:DO=\E[%dB:LE=\E[%dD:RI=\E[%dC
terminfo vt100* ms:AL=\E[%p1%dL:DL=\E[%p1%dM:UP=\E[%p1%dA:DO=\E[%p1%dB:LE=\E[%p1%dD:RI=\E[%p1%dC

################
#
# keybindings
#

#remove some stupid / dangerous key bindings
bind k
bind ^k
bind .
bind ^\
bind \\
bind ^h
bind h
#make them better
bind 'K' kill
bind 'I' login on
bind 'O' login off
bind '}' history

bind -k kl focus left
bind -k kr focus right
bind -k ku focus top
bind -k kd focus bottom

# Yet another hack:
# Prepend/append register [/] to the paste if ^a^] is pressed.
# This lets me have autoindent mode in vi.
register [ "\033:se noai\015a"
register ] "\033:se ai\015a"
bind ^] paste [.]

screen -t state0 0 ./lambda_state_server.py -c /tmp/ca_cert.pem -s /tmp/server_cert.pem -k /tmp/server_key.pem -t 13330
screen -t state1 1 ./lambda_state_server.py -c /tmp/ca_cert.pem -s /tmp/server_cert.pem -k /tmp/server_key.pem -t 13331
screen -t state2 2 ./lambda_state_server.py -c /tmp/ca_cert.pem -s /tmp/server_cert.pem -k /tmp/server_key.pem -t 13332
screen -t state3 3 ./lambda_state_server.py -c /tmp/ca_cert.pem -s /tmp/server_cert.pem -k /tmp/server_key.pem -t 13333
screen -t state4 4 ./lambda_state_server.py -c /tmp/ca_cert.pem -s /tmp/server_cert.pem -k /tmp/server_key.pem -t 13334
screen -t state5 5 ./lambda_state_server.py -c /tmp/ca_cert.pem -s /tmp/server_cert.pem -k /tmp/server_key.pem -t 13335
screen -t state6 6 ./lambda_state_server.py -c /tmp/ca_cert.pem -s /tmp/server_cert.pem -k /tmp/server_key.pem -t 13336
screen -t state7 7 ./lambda_state_server.py -c /tmp/ca_cert.pem -s /tmp/server_cert.pem -k /tmp/server_key.pem -t 13337
screen -t state8 8 ./lambda_state_server.py -c /tmp/ca_cert.pem -s /tmp/server_cert.pem -k /tmp/server_key.pem -t 13338
screen -t state9 9 ./lambda_state_server.py -c /tmp/ca_cert.pem -s /tmp/server_cert.pem -k /tmp/server_key.pem -t 13339
screen -t stateA 10 ./lambda_state_server.py -c /tmp/ca_cert.pem -s /tmp/server_cert.pem -k /tmp/server_key.pem -t 13340
screen -t stateB 11 ./lambda_state_server.py -c /tmp/ca_cert.pem -s /tmp/server_cert.pem -k /tmp/server_key.pem -t 13341
screen -t stateC 12 ./lambda_state_server.py -c /tmp/ca_cert.pem -s /tmp/server_cert.pem -k /tmp/server_key.pem -t 13342
screen -t stateD 13 ./lambda_state_server.py -c /tmp/ca_cert.pem -s /tmp/server_cert.pem -k /tmp/server_key.pem -t 13343
screen -t stateE 14 ./lambda_state_server.py -c /tmp/ca_cert.pem -s /tmp/server_cert.pem -k /tmp/server_key.pem -t 13344
screen -t stateF 15 ./lambda_state_server.py -c /tmp/ca_cert.pem -s /tmp/server_cert.pem -k /tmp/server_key.pem -t 13345
screen -t stateG 16 ./lambda_state_server.py -c /tmp/ca_cert.pem -s /tmp/server_cert.pem -k /tmp/server_key.pem -t 13346
screen -t stateH 17 ./lambda_state_server.py -c /tmp/ca_cert.pem -s /tmp/server_cert.pem -k /tmp/server_key.pem -t 13347
screen -t stateI 18 ./lambda_state_server.py -c /tmp/ca_cert.pem -s /tmp/server_cert.pem -k /tmp/server_key.pem -t 13348
screen -t stateJ 19 ./lambda_state_server.py -c /tmp/ca_cert.pem -s /tmp/server_cert.pem -k /tmp/server_key.pem -t 13349
screen -t stateK 20 ./lambda_state_server.py -c /tmp/ca_cert.pem -s /tmp/server_cert.pem -k /tmp/server_key.pem -t 13350
screen -t stateL 21 ./lambda_state_server.py -c /tmp/ca_cert.pem -s /tmp/server_cert.pem -k /tmp/server_key.pem -t 13351
screen -t stateM 22 ./lambda_state_server.py -c /tmp/ca_cert.pem -s /tmp/server_cert.pem -k /tmp/server_key.pem -t 13352
screen -t stateN 23 ./lambda_state_server.py -c /tmp/ca_cert.pem -s /tmp/server_cert.pem -k /tmp/server_key.pem -t 13353
